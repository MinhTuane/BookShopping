@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    
    <li class="nav-item">
        <a class="nav-link text-dark" href="/Cart/GetUSerCart">
            <span id="cartCount" class="badge text-bg-info">0</span>
            <i class="bi bi-cart"></i>
        </a>
    </li>
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link" href="/Messages/@(User.IsInRole("Admin") ? "AdminChat" : "UserChat")">
                <i class="bi bi-chat-dots"></i>
                <span id="unreadMessageCount" class="badge bg-danger">0</span>
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Hello <span id="username">@User.Identity?.Name!</span>
                @if (User.IsInRole("Admin"))
                {
                    <span>(Admin)</span>
                }
            </a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        

        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
